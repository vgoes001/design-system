var i=Object.defineProperty;var r=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.e8acadd1.js";import{c as e,A as c,M as d}from"./Props.96a6097e.js";import"./jsx-runtime.9c8545e1.js";import"./iframe.f1f5e27f.js";import{T as l,b as u}from"./index.482ccf48.js";import"./string.83498476.js";import"./index.3871a6c5.js";import"./es.map.constructor.40b2e356.js";import"./es.number.to-fixed.9c4ec091.js";function p(){return p=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var a in s)Object.prototype.hasOwnProperty.call(s,a)&&(o[a]=s[a])}return o},p.apply(this,arguments)}r(p,"_extends");const y={},f="wrapper";function m({components:o,...t}){return e(f,p({},y,t,{components:o,mdxType:"MDXLayout"}),e(d,{title:"Tokens/Fonts",mdxType:"Meta"}),e("h1",null,"Fonts"),e(l,{tokens:u,mdxType:"TokensGrid"}))}r(m,"MDXContent");m.isMDXComponent=!0;const x=r(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const n={title:"Tokens/Fonts",includeStories:["__page"]},T={};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:()=>e(c,{mdxStoryNameToKey:T,mdxComponentAnnotations:n},e(m,null))};const j=["__page"];export{j as __namedExportsOrder,x as __page,n as default};
//# sourceMappingURL=fonts.stories.3838da49.js.map
